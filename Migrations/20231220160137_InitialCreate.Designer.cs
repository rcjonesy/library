// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LoncotesLibrary.Migrations
{
    [DbContext(typeof(LoncotesLibraryDbContext))]
    [Migration("20231220160137_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LoncotesLibrary.Models.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("FineAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<bool>("Paid")
                        .HasColumnType("boolean");

                    b.Property<int>("PatronId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PatronId");

                    b.ToTable("Checkouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckoutDate = new DateTime(2023, 12, 20, 10, 1, 37, 260, DateTimeKind.Local).AddTicks(7777),
                            MaterialId = 1,
                            Paid = false,
                            PatronId = 1
                        },
                        new
                        {
                            Id = 2,
                            CheckoutDate = new DateTime(2023, 12, 20, 10, 1, 37, 260, DateTimeKind.Local).AddTicks(7809),
                            MaterialId = 2,
                            Paid = false,
                            PatronId = 2
                        },
                        new
                        {
                            Id = 3,
                            CheckoutDate = new DateTime(2023, 12, 20, 10, 1, 37, 260, DateTimeKind.Local).AddTicks(7811),
                            MaterialId = 3,
                            Paid = false,
                            PatronId = 3
                        },
                        new
                        {
                            Id = 4,
                            CheckoutDate = new DateTime(2023, 12, 20, 10, 1, 37, 260, DateTimeKind.Local).AddTicks(7840),
                            MaterialId = 4,
                            Paid = false,
                            PatronId = 4
                        },
                        new
                        {
                            Id = 5,
                            CheckoutDate = new DateTime(2023, 12, 20, 10, 1, 37, 260, DateTimeKind.Local).AddTicks(7844),
                            MaterialId = 5,
                            Paid = false,
                            PatronId = 5
                        },
                        new
                        {
                            Id = 6,
                            CheckoutDate = new DateTime(2023, 12, 20, 10, 1, 37, 260, DateTimeKind.Local).AddTicks(7846),
                            MaterialId = 6,
                            Paid = false,
                            PatronId = 1
                        },
                        new
                        {
                            Id = 7,
                            CheckoutDate = new DateTime(2023, 12, 20, 10, 1, 37, 260, DateTimeKind.Local).AddTicks(7848),
                            MaterialId = 7,
                            Paid = false,
                            PatronId = 2
                        },
                        new
                        {
                            Id = 8,
                            CheckoutDate = new DateTime(2023, 12, 20, 10, 1, 37, 260, DateTimeKind.Local).AddTicks(7849),
                            MaterialId = 8,
                            Paid = false,
                            PatronId = 3
                        },
                        new
                        {
                            Id = 9,
                            CheckoutDate = new DateTime(2023, 12, 20, 10, 1, 37, 260, DateTimeKind.Local).AddTicks(7851),
                            MaterialId = 9,
                            Paid = false,
                            PatronId = 4
                        },
                        new
                        {
                            Id = 10,
                            CheckoutDate = new DateTime(2023, 12, 20, 10, 1, 37, 260, DateTimeKind.Local).AddTicks(7853),
                            MaterialId = 10,
                            Paid = false,
                            PatronId = 5
                        });
                });

            modelBuilder.Entity("LoncotesLibrary.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Self-Help"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Travel"
                        });
                });

            modelBuilder.Entity("LoncotesLibrary.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CheckoutId")
                        .HasColumnType("integer");

                    b.Property<decimal>("FineAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("OutOfCirculationSince")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckoutId = 0,
                            FineAmount = 0m,
                            GenreId = 1,
                            MaterialName = "The Matrix",
                            MaterialTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CheckoutId = 0,
                            FineAmount = 0m,
                            GenreId = 2,
                            MaterialName = "The Catcher in the Rye",
                            MaterialTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CheckoutId = 0,
                            FineAmount = 0m,
                            GenreId = 3,
                            MaterialName = "National Geographic",
                            MaterialTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            CheckoutId = 0,
                            FineAmount = 0m,
                            GenreId = 4,
                            MaterialName = "Science",
                            MaterialTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            CheckoutId = 0,
                            FineAmount = 0m,
                            GenreId = 5,
                            MaterialName = "New York Times",
                            MaterialTypeId = 5
                        },
                        new
                        {
                            Id = 6,
                            CheckoutId = 0,
                            FineAmount = 0m,
                            GenreId = 6,
                            MaterialName = "Inception",
                            MaterialTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            CheckoutId = 0,
                            FineAmount = 0m,
                            GenreId = 7,
                            MaterialName = "To Kill a Mockingbird",
                            MaterialTypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            CheckoutId = 0,
                            FineAmount = 0m,
                            GenreId = 8,
                            MaterialName = "Time",
                            MaterialTypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            CheckoutId = 0,
                            FineAmount = 0m,
                            GenreId = 9,
                            MaterialName = "Nature",
                            MaterialTypeId = 4
                        },
                        new
                        {
                            Id = 10,
                            CheckoutId = 0,
                            FineAmount = 0m,
                            GenreId = 10,
                            MaterialName = "The Washington Post",
                            MaterialTypeId = 5
                        });
                });

            modelBuilder.Entity("LoncotesLibrary.Models.MaterialType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CheckOutDays")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MaterialTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckOutDays = 14,
                            Name = "Book"
                        },
                        new
                        {
                            Id = 2,
                            CheckOutDays = 7,
                            Name = "DVD"
                        },
                        new
                        {
                            Id = 3,
                            CheckOutDays = 7,
                            Name = "Magazine"
                        },
                        new
                        {
                            Id = 4,
                            CheckOutDays = 14,
                            Name = "Journal"
                        },
                        new
                        {
                            Id = 5,
                            CheckOutDays = 7,
                            Name = "Newspaper"
                        });
                });

            modelBuilder.Entity("LoncotesLibrary.Models.Patron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CheckoutId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patrons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            CheckoutId = 0,
                            Email = "john@example.com",
                            FirstName = "John",
                            IsActive = true,
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            CheckoutId = 0,
                            Email = "alice@example.com",
                            FirstName = "Alice",
                            IsActive = true,
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St",
                            CheckoutId = 0,
                            Email = "michael@example.com",
                            FirstName = "Michael",
                            IsActive = true,
                            LastName = "Garcia"
                        },
                        new
                        {
                            Id = 4,
                            Address = "101 Pine St",
                            CheckoutId = 0,
                            Email = "emily@example.com",
                            FirstName = "Emily",
                            IsActive = true,
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 5,
                            Address = "210 Cedar St",
                            CheckoutId = 0,
                            Email = "sophia@example.com",
                            FirstName = "Sophia",
                            IsActive = true,
                            LastName = "Davis"
                        });
                });

            modelBuilder.Entity("LoncotesLibrary.Models.Checkout", b =>
                {
                    b.HasOne("LoncotesLibrary.Models.Material", "Material")
                        .WithMany("Checkouts")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoncotesLibrary.Models.Patron", "Patron")
                        .WithMany("Checkouts")
                        .HasForeignKey("PatronId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Patron");
                });

            modelBuilder.Entity("LoncotesLibrary.Models.Material", b =>
                {
                    b.HasOne("LoncotesLibrary.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoncotesLibrary.Models.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("LoncotesLibrary.Models.Material", b =>
                {
                    b.Navigation("Checkouts");
                });

            modelBuilder.Entity("LoncotesLibrary.Models.Patron", b =>
                {
                    b.Navigation("Checkouts");
                });
#pragma warning restore 612, 618
        }
    }
}
